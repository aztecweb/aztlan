#!/bin/bash

# Import .env data
. .env

# Import shell helpers
. environment/bin/shared/docker_compose.sh
. environment/bin/shared/aztlan_variables.sh
. environment/bin/shared/utils.sh

alias build="environment/bin/build"
alias install="docker_compose_run_with_host_user installer"
alias server="docker_compose up -d server"

## Node
alias node="docker_compose_run_with_host_user assets-node"
alias assets-watch="node npm run watch"
alias assets-build="node npm run build"

# Lint
alias jslint="node npm run lint:js"
alias stylelint="node npm run lint:style"
alias editorconfig-checker="docker_compose_run_with_host_user editorconfig-checker"

# PHPQA
alias phpqa="docker_compose_run_with_host_user phpqa"
alias codecept="docker_compose tests run -u $(id -u):$(id -g) --rm codecept"

## Composer
alias cli-composer="docker_compose_run_with_host_user -w /app/cli --entrypoint=composer wp"
alias inc-composer="docker_compose_run_with_host_user -w /app/inc --entrypoint=composer wp"
alias wp-composer="docker_compose_run_with_host_user -w /app/wp-packages --entrypoint=composer wp"
alias phpqa-composer="docker_compose_run_with_host_user -w /app/phpqa --entrypoint=composer wp"
alias deploy-composer="docker_compose_run_with_host_user -w /app/deploy --entrypoint=composer wp"

# Database export
alias db-export="wp db export - | gzip > environment/initdb/initdb.sql.gz"

# Database reload
# This command decompresses the database because a direct import can cause
# memory overload and close bash.
db_path="environment/initdb/"
db_name="initdb.sql"
alias db-reload="[ -f ${db_path}${db_name}.gz ] &&
		eval '
			wp db reset --yes &&
			gunzip -cd ${db_path}${db_name}.gz > ${db_path}${db_name} &&
			wp db import ${db_path}${db_name} &&
			rm ${db_path}${db_name}
		' && echo 'Database reloaded' || echo '${db_name} not found in ${db_path}'
	"

# SMTP
alias smtp="docker_compose up smtp"

# Logs
alias logs-fpm="docker_compose logs -f wordpress"
alias logs-nginx="docker_compose logs -f server"

# Shutdown
alias down="docker_compose down"

# Deployer
alias deploy-ssh-keygen="mkdir -p deploy/.ssh && ssh-keygen -f deploy/.ssh/id_ed25519 -t ed25519 -N ''"
alias deploy-ssh-key="cat deploy/.ssh/id_ed25519.pub"
function dep() {
	eval $(echo docker_compose run --rm deployer $@ --log deploy.log | tr -d \')
}

# Docker sync
. environment/bin/shared/docker_sync.sh
alias project-docker-sync="docker_sync"

# Languages POT generation
function i18n() {
	# Set host user as conteiner user for non-Mac users to allow write the POT files
	USER_ARGS=''
	[ 'Darwin' = ${OS} ] || USER_ARGS=" -u $(id -u ${USER}):$(id -g ${USER})"

	eval $(echo docker_compose_run_with_host_user wp i18n make-pot --domain=${THEME_ACTIVE}_assets assets/dist assets/languages/${THEME_ACTIVE}_assets.pot)
	eval $(echo docker_compose_run_with_host_user wp i18n make-pot --domain=${THEME_ACTIVE}_inc inc/src inc/languages/${THEME_ACTIVE}_inc.pot)
	eval $(echo docker_compose_run_with_host_user wp i18n make-pot themes/${THEME_ACTIVE} themes/${THEME_ACTIVE}/languages/${THEME_ACTIVE}.pot)
}
